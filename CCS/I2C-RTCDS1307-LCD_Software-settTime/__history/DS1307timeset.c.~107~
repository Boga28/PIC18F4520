#include "definitions.h"      
#include "i2c.h"    
//TIME CONTROL VIA BUTTON AND LCD
uint8_t position;     
uint8_t executed;         
date_t DATE_STATUS;  
                                     
// SET = 0; herhangi bir ayarlama yok   
// SET = 1; (AY/Yil/Gun... secimi)  
// SET = 2; SET =1' de belilrlenen pozisyon elementinin degerini arttirma azaltma
// SET = 3 execute and SET=0; 
void setTimeCases(){ 
   if(DATE_STATUS.X.SET==1){      
      chooseElement(position);  
   }                                     
   if(DATE_STATUS.X.SET==2){   
      arrangeValueOfElement(position);  
   } 
} 
// SET = 1; (AY/Yil/Gun... secimi)
void chooseElement(uchar_t position_t){       
                                    
   switch(position_t){
   case 0: // SECOND                    
         memset(strLCD,0,32); 
         sprintf(DATE_TIME,"     SECOND     ");   
         memcpy(strLCD,DATE_TIME,17); 
   break;             //1234567890123456
         
   case 1: // MINUTE
         memset(strLCD,0,32);             
         sprintf(DATE_TIME,"     MINUTE     ");   
         memcpy(strLCD,DATE_TIME,17); 
   break;             //1234567890123456  
         
   case 2: // HOUR  
         memset(strLCD,0,32);
         sprintf(DATE_TIME,"      HOUR      ");   
         memcpy(strLCD,DATE_TIME,17); 
   break;             //1234567890123456 
                       
   case 3: // DAY
         memset(strLCD,0,32);          
         sprintf(DATE_TIME,"       DAY      ");   
         memcpy(strLCD,DATE_TIME,17); 
   break;             //1234567890123456 
   
   case 4: // MONTH  
         memset(strLCD,0,32);                           
         sprintf(DATE_TIME,"      MONTH     ");   
         memcpy(strLCD,DATE_TIME,17); 
   break;             //1234567890123456                      
   
   case 5: // YEAR  
         memset(strLCD,0,32);                         
         sprintf(DATE_TIME,"      YEAR      ");   
         memcpy(strLCD,DATE_TIME,17);
   break;             //1234567890123456
   }
}   
              
void arrangeValueOfElement(uchar_t position_t){   
   switch(position_t){ 
   case 0:                                                               
         memset(strLCD,0,32);           // |        |                    
         sprintf(DATE_TIME,"     SECOND            \%02d       ",sec); 
         memcpy(strLCD,DATE_TIME,32);          
   break;
   
   case 1:
         memset(strLCD,0,32);           // |        |                    
         sprintf(DATE_TIME,"     MINUTE            \%02d       ",min);
         memcpy(strLCD,DATE_TIME,32);
   
   break;
   
   case 2:
         memset(strLCD,0,32);           // |        |                    
         sprintf(DATE_TIME,"      HOUR             \%02d       ",hrs);
         memcpy(strLCD,DATE_TIME,32);
   break;                                                       
   
   case 3:
         memset(strLCD,0,32);           // |        |                    
         sprintf(DATE_TIME,"      DAY'             \%02d       ",day);
         memcpy(strLCD,DATE_TIME,32);
   break;
   
   case 4:                    
         memset(strLCD,0,32);           // |        |                    
         sprintf(DATE_TIME,"      MONTH            \%02d     ",month);
         memcpy(strLCD,DATE_TIME,32);
   break;
   
   case 5: 
         memset(strLCD,0,32);           // |        |                    
         sprintf(DATE_TIME,"      YEAR             \%02d     ",yr);   
         memcpy(strLCD,DATE_TIME,32);
   break;
   }
}     
 
//MODE=0 DECREASE, MODE = 1 INCREASE
void increaseElement(uchar_t position_t){        
   switch(position_t){
   case 0:
        if(sec>=59){sec=0;}else{sec++;}
   break;                                  
   
   case 1:
        if(min>=59){min=0;}else{min++;} 
   break;
   
   case 2:
        if(hrs>=23){hrs=0;}else{hrs++;} 
   break;
   
   case 3: 
        if(day>=31){day=0;}else{day++;} 
   break;
   
   case 4:
        if(month>=12){month=0;}else{month++;}
   break;
                                            
   case 5:
        if(yr>=99){yr=0;}else{yr++;}
   break;
      
   }
}   

void decreaseElement(uchar_t position_t){
   switch(position_t){
   case 0:
        if(sec<=0){sec=59; }else{sec--;}
   break;
   
   case 1:
        if(min<=0){min=59; }else{min--;}  
   break;
   
   case 2:
        if(hrs<=0){hrs=23; }else{hrs--;}  
   break;
   
   case 3:
        if(day<=0){day=31; }else{day--;} 
   break;
   
   case 4:
        if(month<=0){month=12; }else{month--;} 
   break;
   
   case 5:
        if(yr<=0){month=99; }else{month--;} 
   break;
      
   }     
}
