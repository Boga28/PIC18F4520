#include "1wire.h" 
#ifndef ONE_WIRE_C
#define ONE_WIRE_C 
    

                               
//  LATC_0  = LATC.0        BUSDIR 
//  TRISC_0 = TRISC.0       BUSOUT  
//  PORTC_0 = PORTC.0       BUSIN 

/*
 * onewire_reset()
 * Description: Initiates the one wire bus.        
 */
// OK if just using a single permanently connected device               
                                          
void onewire_reset() {  
   OneWireRelease();
   delay_us(500);     
   OneWireHigh();           
   delay_us(500);
}  

                                        

/*                       
 * onewire_write(int8 data)
 * Arguments: a byte of data.
 * Description: writes a byte of data to the device.
 */                                          
void onewire_write(uchar_t data) { 
   uint8_t count;
             
   for(count = 0; count < 8; ++count) {        
      OneWireRelease();
      delay_us(2); 
      if(test_bit(data,count)) //ZATEN RELEASE KONUMUNA TEKRAR BIR AYARLAMAYA GEREK YOK
         OneWireHigh();
      delay_us(60);
      OneWireHigh();
      delay_us(2);
   } 
}                                         
                                       
/*
 * onewire_read()
 * Description: reads and returns a byte of data from the device.                                                                 
 */                                  
uint8_t onewire_read() { 
    uint8_t count, data=0;                     
    for(count = 0; count < 8; ++count) {  
        OneWireRelease();        
        delay_us(1);                // pull 1-wire low to initiate read time-slot.
        OneWireHigh();              // now let 1-wire float high,
        delay_us(2);                // let device state stabilise, 
        if(PORTC_0)         //ZATEN RELEASE KONUMUNA TEKRAR BIR AYARLAMAYA GEREK YOK         
           bit_set(data,count);   
        delay_us(120);              // wait until end of read slot.
    }
    return data;    
}         
                 

void OneWireHigh(){               
    PORTC_0 = 1; // Set as output  BUSDIR     
    TRISC_0 = 1; // Set high       BUSOUT 
}

void OneWireRelease(){
    PORTC_0 = 0; // Set as output  BUSDIR
    TRISC_0 = 0; // Set low        BUSOUT
}       
                                                     
uint8_t test_bit(uint8_t valueOfInput, uint8_t bits){ 
   return ((valueOfInput & (1<<bits)) != 0);
}                                            
                     
#endif /*ONE_WIRE_C*/
