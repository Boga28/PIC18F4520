#include "1wire.h" 
#ifndef ONE_WIRE_C
#define ONE_WIRE_C 
    
OneWire_t ONEWIRE;  
uchar_t position; 

uint8_t busy, temp1, temp2;
sint16_t temp3;   
                               
//  LATC_0  = LATC.0        BUSDIR 
//  TRISC_0 = TRISC.0       BUSOUT  
//  PORTC_0 = PORTC.0       BUSIN 

/*
 * onewire_reset()
 * Description: Initiates the one wire bus.
 */
// OK if just using a single permanently connected device               
                                          
void onewire_reset() {  
    switch(position){ 
    case 0:
         OneWireRelease();
         position++;
    break;                      
          
    case 0:
         OneWireHigh();
         position=0;
    break; 
    }
}


/*                       
 * onewire_write(int8 data)
 * Arguments: a byte of data.
 * Description: writes a byte of data to the device.
 */                                          
void onewire_write(uchar_t data) { 
   OneWireHigh();  
   delay_us(1); 
   OneWireRelease(); 
   if(test_bit(data,position)) //ZATEN RELEASE KONUMUNA TEKRAR BIR AYARLAMAYA GEREK YOK
      OneWireHigh();               
   if(position>=7)
      position=0;  
   else
      position++;
}                                         

/*
 * onewire_read()
 * Description: reads and returns a byte of data from the device.                                                                 
 */                                  
void onewire_read(uchar_t mode){                            
        OneWireRelease();        
        delay_us(1);                // pull 1-wire low to initiate read time-slot.
        OneWireHigh();              // now let 1-wire float high,
        delay_us(2);                // let device state stabilise, 
        if(PORTC_0){         //ZATEN RELEASE KONUMUNA TEKRAR BIR AYARLAMAYA GEREK YOK
           if(mode==0)
              bit_set(temp1,count);
           else
              bit_set(temp2,count);
        }
}         
                 

void OneWireHigh(){               
    PORTC_0 = 1; // Set as output  BUSDIR     
    TRISC_0 = 1; // Set high       BUSOUT 
}

void OneWireRelease(){
    PORTC_0 = 0; // Set as output  BUSDIR
    TRISC_0 = 0; // Set low        BUSOUT
}       

uint8_t test_bit(uint8_t valueOfInput, uint8_t bits){ 
   return ((valueOfInput & (1<<bits)) != 0);
}                                            
                     
#endif /*ONE_WIRE_C*/
